{"version":3,"sources":["Chart.js","Canvas.js","App.js","serviceWorker.js","index.js"],"names":["TwoLevelPieChart","exportSVG","element","svg","XMLSerializer","serializeToString","prevProps","this","props","console","log","document","getElementsByClassName","val","getElementById","query","id","className","cx","cy","outerRadius","width","height","data","subject","A","eye","fullmark","hand","head","mouse","leg","mental","verticalAlign","iconType","wrapperStyle","marginTop","dataKey","angle","domain","name","stroke","fill","fillOpacity","React","Component","style","border","backgroundColor","display","btnStyle","margin","Canvas","canvas","state","drawing","refs","getContext","ctx","image","Image","src","btoa","unescape","encodeURIComponent","onload","font","textBaseline","drawImage","fillText","url","toDataURL","setState","ref","onMouseUp","Button","variant","onClick","test","alert","color","component","href","download","Date","getTime","useStyles","makeStyles","theme","root","spacing","marks","value","divStyle","overflowY","borderRadius","marginBottom","paddingTop","divMinStyle","App","useState","eyeCount","handCount","headCount","mouseCount","legCount","mentalCount","setName","setSvg","setUrl","classes","handleChange","event","target","handleUrl","sentUrl","useEffect","Helmet","property","content","sentSvg","type","onChange","Typography","gutterBottom","Slider","defaultValue","max","getAriaValueText","aria-labelledby","step","TwitterShareButton","title","via","TwitterIcon","size","round","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2625565c.chunk.js","sourcesContent":["import React, { ReactDOM, useState } from \"react\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Legend\n} from \"recharts\";\n\nimport MediaQuery from \"react-responsive\";\n\nclass TwoLevelPieChart extends React.Component {\n  exportSVG = element => {\n    const svg = element;\n    const oSerializer = new XMLSerializer();\n    const svgString = oSerializer.serializeToString(svg);\n    return svgString;\n    // generateLink(fileName + '.svg', 'data:image/svg+xml;utf8,' + svgString).click();\n  };\n\n  componentDidUpdate(prevProps) {\n    // 典型的な使い方(props を比較することを忘れないでください)\n    if (this.props !== prevProps) {\n      //   console.log(this.exportSVG(document.getElementById(\"tes\")));\n      console.log(document.getElementsByClassName(\"katagaki\"));\n      this.props.val(this.exportSVG(document.getElementById(\"tes\")));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <MediaQuery query=\"(min-width: 768px)\">\n          <RadarChart\n            id=\"tes\"\n            className=\"App\"\n            cx={300} //300\n            cy={250} //250\n            outerRadius={150} //150\n            width={600}\n            height={450}\n            data={[\n              { subject: \"目\", A: this.props.eye, fullmark: 100 },\n              { subject: \"手\", A: this.props.hand, fullmark: 100 },\n              { subject: \"頭\", A: this.props.head, fullmark: 100 },\n              { subject: \"口\", A: this.props.mouse, fullmark: 100 },\n              { subject: \"足\", A: this.props.leg, fullmark: 100 },\n              { subject: \"心\", A: this.props.mental, fullmark: 100 }\n            ]}\n          >\n            <Legend\n              id=\"katagaki\"\n              verticalAlign={\"center\"}\n              iconType={\"star\"}\n              wrapperStyle={{\n                marginTop: \"24px\"\n              }}\n            />\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" />\n            <PolarRadiusAxis angle={30} domain={[0, 100]} />\n            <Radar\n              name={this.props.name}\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            ></Radar>\n          </RadarChart>\n        </MediaQuery>\n        <MediaQuery query=\"(max-width: 767px)\">\n          <RadarChart\n            id=\"tes\"\n            className=\"App\"\n            cx={188} //300\n            cy={180} //250\n            outerRadius={100} //150\n            width={375}\n            height={300}\n            data={[\n              { subject: \"目\", A: this.props.eye, fullmark: 100 },\n              { subject: \"手\", A: this.props.hand, fullmark: 100 },\n              { subject: \"頭\", A: this.props.head, fullmark: 100 },\n              { subject: \"口\", A: this.props.mouse, fullmark: 100 },\n              { subject: \"足\", A: this.props.leg, fullmark: 100 },\n              { subject: \"心\", A: this.props.mental, fullmark: 100 }\n            ]}\n          >\n            <Legend\n              id=\"katagaki\"\n              verticalAlign={\"center\"}\n              iconType={\"star\"}\n              wrapperStyle={{\n                marginTop: \"24px\"\n              }}\n            />\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"subject\" />\n            <PolarRadiusAxis angle={30} domain={[0, 100]} />\n            <Radar\n              name={this.props.name}\n              dataKey=\"A\"\n              stroke=\"#8884d8\"\n              fill=\"#8884d8\"\n              fillOpacity={0.6}\n            ></Radar>\n          </RadarChart>\n        </MediaQuery>\n      </>\n    );\n  }\n}\n\nexport default TwoLevelPieChart;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport MediaQuery from \"react-responsive\";\n\nconst style = {\n  border: \"1px solid gray\",\n  backgroundColor: \"white\",\n  display: \"none\"\n};\n\nconst btnStyle = {\n  margin: \"4px\"\n};\n\nclass Canvas extends Component {\n  constructor() {\n    super();\n    this.state = { drawing: \"\" };\n  }\n\n  canvas = document.getElementById(\"canvas\");\n\n  getContext() {\n    return this.refs.canvas.getContext(\"2d\");\n  }\n  //   ctx = this.getContext();\n  //   image = new Image();\n\n  test() {\n    const ctx = this.getContext();\n    const image = new Image();\n    image.src =\n      \"data:image/svg+xml;charset=utf-8;base64,\" +\n      btoa(unescape(encodeURIComponent(this.props.svg)));\n\n    image.onload = () => {\n      // SVGデータをPNG形式に変換する\n      ctx.font = \"24px serif\";\n      ctx.textBaseline = \"hanging\";\n      ctx.drawImage(image, 0, 0, image.width, image.height);\n      ctx.fillText(this.props.name, 40, 50);\n\n      var canvas = document.getElementById(\"canvas\");\n      var url = canvas.toDataURL();\n      this.props.val(url);\n      this.setState({ drawing: url });\n      //   console.log(this.state.drawing);\n    };\n  }\n\n  //   shouldComponentUpdate(nextProps) {\n  //     if (this.props.svg !== nextProps) {\n  //       this.test();\n  //     }\n  //   }\n\n  render() {\n    return (\n      <>\n        <MediaQuery query=\"(min-width: 768px)\">\n          <canvas\n            id=\"canvas\"\n            ref=\"canvas\"\n            width=\"600px\"\n            height=\"450px\"\n            onMouseUp={() => {\n              // this.test();\n            }}\n            style={style}\n          />\n        </MediaQuery>\n        <MediaQuery query=\"(max-width: 767px)\">\n          <canvas\n            id=\"canvas\"\n            ref=\"canvas\"\n            width=\"375px\"\n            height=\"300px\"\n            onMouseUp={() => {\n              // this.test();\n            }}\n            style={style}\n          />\n        </MediaQuery>\n        <div>\n          <Button\n            style={btnStyle}\n            variant=\"contained\"\n            onClick={() => {\n              this.test();\n              alert(\"done!\");\n            }}\n          >\n            画像を生成\n          </Button>\n          <Button\n            style={btnStyle}\n            variant=\"contained\"\n            color=\"white\"\n            component=\"span\"\n          >\n            <a\n              onClick={() => {}}\n              href={this.state.drawing}\n              download={new Date().getTime() + \".png\"}\n            >\n              ダウンロード\n            </a>\n          </Button>\n          <p>\n            ※スマートフォンのSafari\bだとダウンロードできない場合がございます。\n          </p>\n        </div>\n      </>\n    );\n  }\n}\nexport default Canvas;\n","import \"./App.css\";\nimport React, { ReactDOM, useState, useEffect } from \"react\";\n\nimport { Helmet } from \"react-helmet\";\nimport Ogp from \"./meta\";\nimport TwoLevelPieChart from \"./Chart\";\nimport Canvas from \"./Canvas\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n// import saveSvgAsPng from \"../node_modules/save-svg-as-png/lib/saveSvgAsPng\";\nimport { TwitterShareButton, TwitterIcon } from \"react-share\";\nimport MediaQuery from \"react-responsive\";\n\n//----------------スライダー関連\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 200,\n    margin: \"auto\"\n  },\n  margin: {\n    height: theme.spacing(3)\n  }\n}));\nconst marks = [\n  {\n    value: 0\n  }\n];\nconst divStyle = {\n  overflowY: \"scroll\",\n  border: \"1px solid grey\",\n  borderRadius: \"3px\",\n  width: \"500px\",\n  height: \"200px\",\n  margin: \"auto\",\n  marginBottom: \"20px\",\n  paddingTop: \"10px\"\n};\n\nconst divMinStyle = {\n  // overflowY: \"scroll\",\n  // border: \"1px solid grey\",\n  // borderRadius: \"3px\",\n  // width: \"300px\",\n  // height: \"200px\",\n  // margin: \"auto\",\n  // marginBottom: \"20px\",\n  // paddingTop: \"10px\"\n};\n\n//-------------------------------スライダー関連\n\nfunction App() {\n  const [eye, eyeCount] = useState(50);\n  const [hand, handCount] = useState(50);\n  const [head, headCount] = useState(50);\n  const [mouse, mouseCount] = useState(50);\n  const [leg, legCount] = useState(50);\n  const [mental, mentalCount] = useState(50);\n  const [name, setName] = useState(\"肩書き\");\n  const [svg, setSvg] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setName(event.target.value);\n    console.log(name);\n  };\n  const handleSvg = sentSvg => {\n    setSvg(sentSvg);\n    console.log(svg);\n  };\n\n  const handleUrl = sentUrl => {\n    setUrl(sentUrl);\n    console.log(url);\n    console.log(\"走ってる\");\n  };\n\n  // 朱度(prevProps) {\n  //   // 典型的な使い方(props を比較することを忘れないでください)\n  //   if (this.state.url !== prevState.url) {\n  //     handleUrl(url);\n  //     console.log(\"走ってる\")\n  //   }\n  // }\n  useEffect(() => {\n    handleUrl(url);\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <meta property=\"og:title\" content={\"デザイナー自己診断書\"} />\n        <meta property=\"og:description\" content={\"UIUXデザイナー\"} />\n\n        <meta\n          property=\"og:url\"\n          content={\"https://d00fy.github.io/hosting-react/\"}\n        />\n        <meta property=\"og:type\" content={\"website\"} />\n        <meta property=\"og:site_name\" content={\"なんでもいいよ\"} />\n        <meta\n          property=\"og:image\"\n          content={\n            \"http://www.zubapita.jp/wp-content/uploads/2009/02/screenshot-02.jpg\"\n          }\n        />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:site\" content={`@uchibashi`} />\n      </Helmet>\n      <div className=\"App\">\n        <TwoLevelPieChart\n          id=\"testes\"\n          eye={eye}\n          hand={hand}\n          head={head}\n          mouse={mouse}\n          leg={leg}\n          mental={mental}\n          name={name}\n          val={handleSvg}\n        />\n\n        {/* //--------------------- スライダー関連*/}\n        {/* <div style={centerStyle}> */}\n        <MediaQuery query=\"(min-width: 768px)\">\n          <div style={divStyle}>\n            <div className={classes.root}>\n              <label>\n                Name:\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleChange}\n                />\n              </label>\n\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                目\n              </Typography>\n              <Slider\n                defaultValue={eye}\n                max={100}\n                getAriaValueText={value => {\n                  eyeCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                手\n              </Typography>\n              <Slider\n                defaultValue={hand}\n                max={100}\n                getAriaValueText={value => {\n                  handCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                頭\n              </Typography>\n              <Slider\n                defaultValue={head}\n                max={100}\n                getAriaValueText={value => {\n                  headCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                口\n              </Typography>\n              <Slider\n                defaultValue={mouse}\n                max={100}\n                getAriaValueText={value => {\n                  mouseCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                足\n              </Typography>\n              <Slider\n                defaultValue={leg}\n                max={100}\n                getAriaValueText={value => {\n                  legCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                心\n              </Typography>\n              <Slider\n                defaultValue={mental}\n                max={100}\n                getAriaValueText={value => {\n                  mentalCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n            </div>\n          </div>\n          {/* </div> */}\n          <Canvas svg={svg} name={name} val={handleUrl} />\n          <TwitterShareButton\n            title=\"\b6個の項目を入力し、デザイナーとしてのあなたの適性を自己評価！\"\n            via=\"uchibashi\"\n            url=\"https://d00fy.github.io/hosting-react/#本物のデザイナー\"\n          >\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n        </MediaQuery>\n        {/* メディアクエリ分岐 */}\n        <MediaQuery query=\"(max-width: 767px)\">\n          <div>desue</div>\n          <div style={divMinStyle}>\n            <div className={classes.root}>\n              <label>\n                Name:\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleChange}\n                />\n              </label>\n\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                目\n              </Typography>\n              <Slider\n                defaultValue={eye}\n                max={100}\n                getAriaValueText={value => {\n                  eyeCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                手\n              </Typography>\n              <Slider\n                defaultValue={hand}\n                max={100}\n                getAriaValueText={value => {\n                  handCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                頭\n              </Typography>\n              <Slider\n                defaultValue={head}\n                max={100}\n                getAriaValueText={value => {\n                  headCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                口\n              </Typography>\n              <Slider\n                defaultValue={mouse}\n                max={100}\n                getAriaValueText={value => {\n                  mouseCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                足\n              </Typography>\n              <Slider\n                defaultValue={leg}\n                max={100}\n                getAriaValueText={value => {\n                  legCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                心\n              </Typography>\n              <Slider\n                defaultValue={mental}\n                max={100}\n                getAriaValueText={value => {\n                  mentalCount(value);\n                }}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={1}\n                marks={marks}\n              />\n            </div>\n          </div>\n          {/* </div> */}\n          <Canvas svg={svg} name={name} val={handleUrl} />\n          <TwitterShareButton\n            title=\"\b6個の項目を入力し、デザイナーとしてのあなたの適性を自己評価！\"\n            via=\"uchibashi\"\n            url=\"https://d00fy.github.io/hosting-react/#本物のデザイナー\"\n          >\n            <TwitterIcon size={32} round />\n          </TwitterShareButton>\n        </MediaQuery>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}