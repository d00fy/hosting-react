{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","margin","height","spacing","marks","value","TwoLevelPieChart","className","cx","cy","outerRadius","data","subject","A","this","props","eye","B","fullMark","hand","head","mouse","leg","mental","dataKey","name","stroke","fill","fillOpacity","React","Component","App","useState","eyeCount","handCount","headCount","mouseCount","legCount","mentalCount","classes","Typography","id","gutterBottom","Slider","defaultValue","max","getAriaValueText","aria-labelledby","step","valueLabelDisplay","url","options","text","via","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88100c58.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis\n} from \"recharts\";\n\nimport {\n  TwitterTimelineEmbed,\n  TwitterShareButton,\n  TwitterFollowButton,\n  TwitterHashtagButton,\n  TwitterMentionButton,\n  TwitterTweetEmbed,\n  TwitterMomentShare,\n  TwitterDMButton,\n  TwitterVideoEmbed,\n  TwitterOnAirButton\n} from \"react-twitter-embed\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300,\n    margin: \"auto\"\n  },\n  margin: {\n    height: theme.spacing(3)\n  }\n}));\n\nconst marks = [\n  {\n    value: 0\n  }\n];\n\nclass TwoLevelPieChart extends React.Component {\n  render() {\n    return (\n      <RadarChart\n        className=\"App\"\n        cx={300}\n        cy={250}\n        outerRadius={150}\n        width={600}\n        height={500}\n        data={[\n          { subject: \"目\", A: this.props.eye, B: 110, fullMark: 150 },\n          { subject: \"手\", A: this.props.hand, B: 130, fullMark: 150 },\n          { subject: \"頭\", A: this.props.head, B: 130, fullMark: 150 },\n          { subject: \"口\", A: this.props.mouse, B: 100, fullMark: 150 },\n          { subject: \"足\", A: this.props.leg, B: 90, fullMark: 150 },\n          { subject: \"心\", A: this.props.mental, B: 85, fullMark: 150 }\n        ]}\n      >\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"subject\" />\n        <PolarRadiusAxis />\n        <Radar\n          name=\"Mike\"\n          dataKey=\"A\"\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    );\n  }\n}\n\nfunction App() {\n  const [eye, eyeCount] = useState(10);\n  const [hand, handCount] = useState(10);\n  const [head, headCount] = useState(10);\n  const [mouse, mouseCount] = useState(10);\n  const [leg, legCount] = useState(10);\n  const [mental, mentalCount] = useState(10);\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"App\">\n        <TwoLevelPieChart\n          eye={eye}\n          hand={hand}\n          head={head}\n          mouse={mouse}\n          leg={leg}\n          mental={mental}\n        />\n        <div className={classes.root}>\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            目\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              eyeCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            手\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              handCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            頭\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              headCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            口\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              mouseCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            足\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              legCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <Typography id=\"discrete-slider-custom\" gutterBottom>\n            心\n          </Typography>\n          <Slider\n            defaultValue={10}\n            max={120}\n            getAriaValueText={value => {\n              mentalCount(value);\n            }}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n          />\n          <TwitterShareButton\n            url={\"https://d00fy.github.io/hosting-react/\"}\n            options={{ text: \"デザイナー診断\", via: \"uchibashi\" }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}